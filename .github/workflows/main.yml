# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Install SWI-Prolog backend
        uses: logtalk-actions/setup-swi-prolog@master
        with:
          swi-prolog-branch: stable
          swi-prolog-version: latest
      - name: Install Logtalk
        uses: logtalk-actions/setup-logtalk@master
        with:
          logtalk-version: git
      - name: Checkout Logtalk application to be tested
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Define environment variable for the test results
        run: echo "EXITFlat=0" >> $GITHUB_ENV
      - name: Define environment variable for the test results
        run: echo "EXITNested=0" >> $GITHUB_ENV
      - name: Run the flat application tests
        run: |
          logtalk_tester -p swi -n tester_flat -c xml || EXITFlat=$?
          xsltproc --stringparam prefix work/$(basename $GITHUB_REPOSITORY)/$(basename $GITHUB_REPOSITORY)/ --stringparam url https://github.com/$GITHUB_REPOSITORY/tree/$GITHUB_SHA -o flat_coverage_report.html coverage_report.xml
      - name: Run the nested application tests
        run: |
          logtalk_tester -p swi -n tester_nested -c xml || EXITNested=$?
          xsltproc --stringparam prefix work/$(basename $GITHUB_REPOSITORY)/$(basename $GITHUB_REPOSITORY)/ --stringparam url https://github.com/$GITHUB_REPOSITORY/tree/$GITHUB_SHA -o nested_coverage_report.html coverage_report.xml
      - name: Upload flat code coverage report
        uses: actions/upload-artifact@master
        with:
          name: flat-code-coverage-report
          path: flat_coverage_report.html
      - name: Upload nested code coverage report
        uses: actions/upload-artifact@master
        with:
          name: nested-code-coverage-report
          path: nested_coverage_report.html
      - name: Make code coverage report and tap-report public
        run: |
          mkdir -p public
          mv flat_coverage_report.html public/
          mv nested_coverage_report.html public/
          cp README.md public/
      - name: Publish public reports
        uses: tsunematsu21/actions-publish-gh-pages@v1.0.1
        with:
          dir: public
          branch: gh-pages
          token: ${{ secrets.GH_PAT }}
      - name: Generate the application documentation
        run: |
          swilgt -g "{loader,lgtdoc(loader)},lgtdoc::directory('.')" -t halt
          cd xml_docs
          printf 'n\nSWIdict\nPaul Brown\n\n\n' | lgt2rst -s -t "swidict"
          make html
          cd _build/html
          zip -r ../../../docs.zip *
      - name: Upload documentation
        uses: actions/upload-artifact@master
        with:
          name: docs
          path: docs.zip
      - name: Generate the application diagrams
        run: |
          swilgt -g "{loader,diagrams(loader)},diagrams::directory('.')" -t halt
          lgt2svg
          zip diagrams.zip *.svg
      - name: Upload diagrams
        uses: actions/upload-artifact@master
        with:
          name: diagrams
          path: diagrams.zip
      - name: Set workflow exit status after the test results
        run: |
            [ $EXITFlat -le 0 ] && [ $EXITNested -le 0 ] || exit $?
